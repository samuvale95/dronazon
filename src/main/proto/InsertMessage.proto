package com.example.grpc;

message Drone {
  optional int32 id = 1;
  optional string ip = 2;
  optional int32 port = 3;
}

message InsertRingRequest{
  optional Drone callerDrone = 1;
}

message InsertRingResponse{
  optional Drone nextDrone = 1;
  optional Drone masterDrone = 2;
}

message Position{
    optional int32 x = 1;
    optional int32 y = 2;
}

message PositionRequest{
  optional Drone drone = 1;
  optional Position position = 2;
}

message PositionResponse{}

message Delivery{
  optional int32 id = 1;
  optional Drone droneTarget = 2;
  optional Position takePoint = 3;
  optional Position deliveryPoint = 4;
}

message DeliveryRequest{
  optional Delivery delivery = 1;
}

message DeliveryResponse{}

message InfoAndStatsRequest{
  optional double deliveryTimeStamp = 1;
  optional Position newPosition = 2;
  optional int32 battery = 3;
  optional double distanceRoutes = 4;
  optional double airPollution = 5;
  optional int32 callerDrone = 6;
  optional int32 droneTarget = 7;
  optional int32 deliveryNumber = 8;
}

message InfoAndStatsResponse{}

message ElectionRequest{
  optional int32 id = 1;
  optional int32 battery = 2;
  optional string type = 3;
}

message ElectionResponse{}

service DroneService{
  rpc insertIntoRing(InsertRingRequest) returns(InsertRingResponse);
  rpc sendPosition(PositionRequest) returns(PositionResponse);
  rpc sendDelivery(DeliveryRequest) returns(DeliveryResponse);
  rpc sendInfoAfterDelivery(InfoAndStatsRequest) returns(InfoAndStatsResponse);
  rpc election(ElectionRequest) returns(ElectionResponse);
}